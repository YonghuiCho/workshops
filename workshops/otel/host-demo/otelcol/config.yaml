extensions:
  health_check:
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

receivers:
  otlp:
    protocols:
      grpc:
      http:
  hostmetrics:
    collection_interval: 30s
    scrapers:
      cpu:
      disk:
      load:
      filesystem:
      memory:
      network:
  filelog:
    include: [ path to your log file *.log ]
    start_at: beginning

  opencensus:

  # Collect own metrics
  prometheus:
    config:
      scrape_configs:
      - job_name: 'otel-collector'
        scrape_interval: 10s
        static_configs:
        - targets: ['0.0.0.0:8888']

  jaeger:
    protocols:
      grpc:
      thrift_binary:
      thrift_compact:
      thrift_http:

  zipkin:

processors:
  resourcedetection:
    detectors: [system]
    system:
      hostname_sources: ["os"]
  batch:

exporters:
  logging:
    verbosity: detailed
  otlp:
    endpoint: "<your coralogix ingress here>:443"
    headers:
      "Authorization": "<your coralogix key here>"
      "CX-Application-Name": "<your coralogix app name here>"
      "CX-Subsystem-Name": "<your coralogix subystemname name here>"
      ApplicationName: "<your application name here>"
      ApiName: "<your api name here>"

service:

  pipelines:

    traces:
      receivers: [otlp]
      processors: [resourcedetection, batch]
      exporters: [otlp]

    metrics:
      receivers: [otlp, hostmetrics, opencensus, prometheus]
      processors: [resourcedetection, batch]
      exporters: [otlp]

    logs:
      receivers: [otlp,filelog]
      processors: [resourcedetection,batch]
      exporters: [otlp]

  extensions: [health_check, pprof, zpages]